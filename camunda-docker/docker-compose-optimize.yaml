services:

  database:
    image: 'postgres:latest'
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./db-data/:/var/lib/postgresql/data/
    networks:
          - camunda-platform
  
  camunda:
    container_name: camunda
    hostname: camunda
    image: 'camunda/camunda-bpm-platform:latest'
    ports:
      - "8080:8080"
    links:
      - "database:database"
    environment:
      DB_DRIVER: org.postgresql.Driver
      DB_URL: jdbc:postgresql://database:5432/${POSTGRES_DB}
      DB_USERNAME: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - camunda-platform
    depends_on:
      - database
      - elasticsearch
  
  optimize: # https://docs.camunda.io/docs/self-managed/platform-deployment/docker/#optimize
    image: camunda/optimize:${CAMUNDA_OPTIMIZE_VERSION:-3.8.2}
    container_name: optimize
    ports:
      - "8083:8090"
    environment: # https://docs.camunda.io/docs/self-managed/optimize-deployment/setup/installation/#available-environment-variables
      - OPTIMIZE_ELASTICSEARCH_HOST=${ELASTICSEARCH_HOST}
      - OPTIMIZE_ELASTICSEARCH_HTTP_PORT=${ELASTICSEARCH_HTTP_PORT}
      - ABSOLUTE_PATH_ON_HOST_TO_CONFIGURATION_FILE=${CONFIGURATION_FILE}
    networks:
      - camunda-platform
    depends_on:
      - elasticsearch
    volumes:
      - ./optimize-config/environment-config.yaml:/optimize/config/environment-config.yaml
      - ./optimize-config/optimizeLicense.txt:/optimize/config/optimizeLicense.txt
  
  elasticsearch: # https://hub.docker.com/_/elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION:-7.17.0}
    container_name: elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - cluster.routing.allocation.disk.threshold_enabled=false
      - cluster.routing.allocation.disk.watermark.low=1024mb
      - cluster.routing.allocation.disk.watermark.high=512mb
      - cluster.routing.allocation.disk.watermark.flood_stage=256mb
      - cluster.name=elasticsearch
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - action.auto_create_index=false
      - transport.host=0.0.0.0
      - http.host=0.0.0.0
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - client.transport.sniff=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:9200/_cat/health | grep -q green" ]
      interval: 30s
      timeout: 5s
      retries: 3
    volumes:
      - elastic:/usr/share/elasticsearch/data
    networks:
      - camunda-platform

volumes:
  elastic:

networks:
  camunda-platform: